pipeline {
    agent any
    
    stages {
        // when { expression { currentBuild.getBuildCauses('hudson.model.Cause$UserIdCause').userId[0] != "srija" } }
        // stage ("defination"){
        //     steps{
        //         script {
        //             def specificCause = currentBuild.getBuildCauses('hudson.model.Cause$UserIdCause')
        //         }
        //     }
        // }
        stage ("Authorize Usage") {
          when {
              branch 'dev'
              expression { currentBuild.getBuildCauses('hudson.model.Cause$UserIdCause').userId[0] == "srija" } 
              
          }
            steps {
                script {
                    echo "userid[0]::::: ${currentBuild.getBuildCauses('hudson.model.Cause$UserIdCause').userId[0]}"
                    specificCause = currentBuild.getBuildCauses('hudson.model.Cause$UserIdCause')
                    echo "build cause::1:::${currentBuild.buildCauses}"
                    echo "build cause2:::::${currentBuild.getBuildCauses('jenkins.branch.BranchEventCause')}"
                    println('Build Cause 2 : '+currentBuild.getBuildCauses('jenkins.branch.BranchEventCause'))
                    event = currentBuild.getBuildCauses('jenkins.branch.BranchEventCause')
                    echo "branch event=event$event"
                    
                    
                    def causes = currentBuild.rawBuild.getCauses()
                    echo "specificCause: $specificCause.userName"
                    echo "specificCause: ${specificCause.userId[0]}"
                    echo "specificCause: $specificCause"
                    echo "CAUSE:::::: $causes"
                    currentBuild.description = 'Aborting Build due to manual start - thats not permitted!'
                    error('Aborting Build due to manual start - thats not permitted!')
                }
            }
        }
    }
}
